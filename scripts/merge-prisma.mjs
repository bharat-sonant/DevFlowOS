import fs from "node:fs";
import path from "node:path";

const root = process.cwd();
const headerPath = path.join(root, "prisma", "schema.prisma");
const modelsDir  = path.join(root, "prisma", "models");
const outDir     = path.join(root, "apps", "api", "prisma");
const outFile    = path.join(outDir, "schema.prisma");

if (!fs.existsSync(outDir)) {
  fs.mkdirSync(outDir, { recursive: true });
}

const header = fs.readFileSync(headerPath, "utf8");

// read all *.prisma under prisma/models (sorted for stable builds)
const files = fs.readdirSync(modelsDir)
  .filter(f => f.endsWith(".prisma"))
  .sort((a,b) => a.localeCompare(b));

let body = "";
for (const f of files) {
  const p = path.join(modelsDir, f);
  body += `\n// ---- ${f} ----\n`;
  body += fs.readFileSync(p, "utf8").trim() + "\n";
}

const banner = `// AUTO-GENERATED by scripts/merge-prisma.mjs
// Do NOT edit this file directly. Edit files under prisma/models instead.
`;

fs.writeFileSync(outFile, `${banner}\n${header.trim()}\n${body}`);
console.log(`Merged ${files.length} model file(s) into ${path.relative(root, outFile)}`);
